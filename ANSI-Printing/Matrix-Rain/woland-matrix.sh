#!/bin/bash 

echo -e "\033[2J\033[?25l";

Rows=$(tput lines)
Columns=$(tput cols)
Rows=$((Rows -1))

Alphabets=("あ" "い" "う" "え" "お" "か" "き" "く" "け" "こ" "さ" "し" "す" "せ" "そ" "た" "ち" "つ" "て" "と" "な" "に" "ぬ" "ね" "の" "は" "ひ" "ふ" "へ" "ほ" "ま" "み" "む" "め" "も" "や" "ゆ" "よ" "ら" "り" "る" "れ" "ろ" "わ" "を" "ん" "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z" "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z" "ア" "イ" "ウ" "エ" "オ" "カ" "キ" "ク" "ケ" "コ" "サ" "シ" "ス" "セ" "ソ" "タ" "チ" "ツ" "テ" "ト" "ナ" "ニ" "ヌ" "ネ" "ノ" "ハ" "ヒ" "フ" "ヘ" "ホ" "マ" "ミ" "ム" "メ" "モ" "ヤ" "ユ" "ヨ" "ラ" "リ" "ル" "レ" "ロ" "ワ" "ヲ" "ン" "З" "а" "р" "е" "г" "и" "с" "т" "р" "и" "р" "у" "й" "т" "е" "с" "ь" "с" "е" "й" "ч" "а" "с" "н" "а" "Д" "е" "с" "я" "т" "у" "ю" "М" "е" "ж" "д" "у" "н" "а" "р" "о" "д" "н" "у" "ю" "К" "о" "н" "ф" "е" "р" "е" "н" "ц" "и" "ю" "п" "о" "แ" "ผ่" "น" "ดิ" "น" "ฮั่" "น" "เ" "สื่" "อ" "ม" "โ" "ท" "ร" "ม" "แ" "ส" "น" "สั" "ง" "เ" "ว" "ช" "พ" "ร" "ะ" "ป" "ก" "เ" "ก" "ศ" "ก" "อ" "ง" "บู๊" "กู้" "ขึ้" "น" "ใ" "ห" "ม่" "ብ" "ላ" "ካ" "ለ" "ኝ" "እ" "ን" "ደ" "አ" "ባ" "ቴ" "በ" "ቆ" "መ" "ጠ" "ኝ" "ሰ" "ማ" "ይ" "አ" "ይ" "ታ" "ረ" "ስ" "ን" "ጉ" "ሥ" "አ" "ይ" "ከ" "ሰ" "ስ" "ᚻ" "ᛖ" "ᚳ" "ᚹ" "ᚫ" "ᚦ" "ᚦ" "ᚫ" "ᛏ" "ᚻ" "ᛖ" "ᛒ" "ᚢ" "ᛞ" "ᛖ" "ᚩ" "ᚾ" "ᚦ" "ᚫ" "ᛗ" "ᛚ" "ᚪ" "ᚾ" "ᛞ" "ᛖ" "ᚾ" "ᚩ" "ᚱ" "ᚦ" "ᚹ" "ᛖ" "ᚪ" "ᚱ" "ᛞ" "ᚢ" "ᛗ" "ᚹ" "ᛁ" "ᚦ" "ᚦ" "ᚪ" "ᚹ" "ᛖ" "ᛥ" "ᚫ" "გ" "თ" "ხ" "ო" "ვ" "თ" "ა" "ხ" "ლ" "ა" "ვ" "ე" "გ" "ა" "ი" "ა" "რ" "ო" "თ" "რ" "ე" "გ" "ი" "ს" "ტ" "რ" "ა" "ც" "ი" "ა" "τ" "ὴ" "ν" "ἀ" "ρ" "χ" "ὴ" "ν" "ὀ" "ρ" "θ" "ῶ" "ς" "ὑ" "π" "ο" "θ" "έ" "σ" "θ" "α" "ι" "," "μ" "ά" "τ" "α" "ι" "ο" "ν" "ἡ" "γ" "ο" "ῦ" "μ" "α" "ι" "π" "ε" "ρ" "ὶ" "τ" "ῆ" "ς" "∮" "E" "⋅" "d" "a" "=" "Q" "," "n" "→" "∞" "," "∑" "f" "(" "i" ")" "=" "∏" "g" "(" "i" ")" "," "∀" "x" "∈" "ℝ" ":" "⌈" "x" "⌉" "=" "−" "⌊" "−" "x" "⌋" "," "α" "∧" "¬" "β" "=" "¬" "(" "¬" "α" "∨" "β")

while true
do
    (
    X=$((RANDOM%Columns))
    Y=$((RANDOM%Rows))

	# for i in $(eval echo -e {1..$Rows})
    for ((i = 1; i <= Rows; i++))
    do
        # Select a random alphabet from the array
        CharIndex=$((RANDOM % ${#Alphabets[@]}))
        Char=${Alphabets[CharIndex]}

        echo -e "\033[$((i-1));${X}H\033[32m$Char\033[$i;${X}H\033[37m$Char"
        sleep 0.1

		if (( i >= Y )); then
            echo -e "\033[$((i-Y));${X}H "
        fi
    done

	# for i in $(eval echo -e {$((i-d))..$Rows}); #[mat!rix]
    for ((i = i - Y; i <= Rows; i++))
    do
        echo -e "\033[$i;${X}f "
        sleep 0.1
    done
    ) &

    read -rt 0.1 -n 1 key
    if [[ $key == "q" ]]; then
        pkill -P $$   # Terminate child processes
		tput reset
        exit
    fi
    sleep 0.05
done

